{% extends "user_summary.html.twig" %}

{% block title %}
    User Profile
{% endblock title %}

{% block userContent %}
    <div class="flex-row flex">
        <div class="my-5 text-center mx-auto">
            <table class="inline-block mx-auto border-solid border border-black">
                <tr>
                    {% for key in keyList %}
                        <th class="text-center border-solid border border-black px-3">{{ key }}</th>
                    {% endfor %}
                </tr>
                {% for record in monthlyMileage %}
                    <tr class="dataRow">
                        <td class="p-1  border border-solid border-gray-500">{{ record.Year }}</td>
                        <td class="p-1  border border-solid border-gray-500">{{ record.Month }}</td>
                        <td class="p-1  border border-solid border-gray-500 text-right">{{ record.Mileage }}</td>
                    </tr>
                {% endfor %}
            </table>
        </div>

        <div id="googleMap" class="my-5 w-3/4 mx-auto" style="height: 600px"></div>


        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFc-jhoXzMv4NW-2qF400eEgu7AvkpscQ&language=en&region-CA&callback=initMap">
        </script>

    </div>


    <script>

        var defaultLocation = {lat: 45.5017, lng: -73.5673};
        var map;
        var directionsService;
        var directionsDisplay = [];
        var bounds;
        var northEastLatLng;
        var westSouthLatLng;

        function initMap() {
            directionsService = new google.maps.DirectionsService();

            var mapOptions = {
                zoom: 8,
                center: defaultLocation
            }
            map = new google.maps.Map(document.getElementById('googleMap'), mapOptions);
            bounds = new google.maps.LatLngBounds();

        }

        function calculateRoute(mapOrigin, mapDestination, index) {

            directionsDisplay[index] = new google.maps.DirectionsRenderer({
                map: map
            });

            var request = {
                origin: mapOrigin,
                destination: mapDestination,
                travelMode: 'DRIVING'
            };

            directionsService.route(request, function (result, status) {
                if (status === "OK") {
                    //alert("response ok");
                    //directionsDisplay[index].setMap(map);
                    directionsDisplay[index].setDirections(result);
                    bounds.extend(northEastLatLng);
                    bounds.extend(westSouthLatLng);
                    map.fitBounds(bounds);
                }

            });
        }

        function clearRoutes() {
            for (let i = 0; i < directionsDisplay.length; i++) {
                var route = directionsDisplay[i];
                if (route != null) {
                    route.setMap(null);
                }
            }
            directionsDisplay = [];
        }


        function newLocation(newLat, newLng) {
            map.setCenter({
                lat: newLat,
                lng: newLng
            });
        }

        //google.maps.event.addDomListener(window, 'load', initMap);

        function getMax(first, second) {
            return first > second ? first : second;
        }

        function getMin(first, second) {
            return first < second ? first : second;
        }


        var hasSelection = false;
        $(document).ready(function () {
            initMap();

            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-center",
                "preventDuplicates": false,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "4000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }


            $(".dataRow").on('mouseover', function () {
                $(this).addClass("bg-green-400");
            })

            $(".dataRow").on('mouseout', function () {
                if (!$(this).hasClass("border-2")) {
                    $(this).removeClass("bg-green-400");
                }
            })

            $(".dataRow").on('click', function () {
                if (!hasSelection) {
                    $(this).addClass("border-2 border-solid border-green-400 bg-green-400 font-bold");
                    hasSelection = true;

                    $year = $(this).children('td').slice(0, 1).html();
                    $month = $(this).children('td').slice(1, 2).html();

                    $dataString = JSON.stringify({'year': $year, 'month': $month});
                    $.ajax({

                        url: "/summary/map",
                        type: "POST",
                        dataType: "json",
                        data: $dataString,
                        error: function (jqxhr, status, errorThrown) {
                            alert("AJAX error: " + jqxhr.responseText);
                        }
                    }).done(function (trips) {
                        let counter = 0;
                        let firstTrip = trips[0];
                        let north = Number(firstTrip['destination'].lat);
                        let south = Number(firstTrip['origin'].lat);
                        let west = Number(firstTrip['origin'].lng);
                        let east = Number(firstTrip['destination'].lng);

                        for (var i = 0; i < trips.length; i++) {
                            var trip = trips[i];
                            if (trip['origin'].name !== trip['destination'].name) {
                                curNorth = getMax(Number(trip['destination'].lat), Number(trip['origin'].lat));
                                curSouth = getMin(Number(trip['destination'].lat), Number(trip['origin'].lat));
                                curWest = getMin(Number(trip['destination'].lng), Number(trip['origin'].lng));
                                curEast = getMax(Number(trip['destination'].lng), Number(trip['origin'].lng));

                                north = getMax(north, curNorth);
                                south = getMin(north, curSouth);
                                west = getMin(west, curWest);
                                east = getMax(east, curEast);

                                northEastLatLng = new google.maps.LatLng(north, east);
                                westSouthLatLng = new google.maps.LatLng(south, west);
                            }
                        }

                        for (var i = 0; i < trips.length; i++) {
                            var trip = trips[i];
                            if (trip['origin'].name !== trip['destination'].name) {
                                var originCoor = {lat: Number(trip['origin'].lat), lng: Number(trip['origin'].lng)};
                                var destCoor = {
                                    lat: Number(trip['destination'].lat),
                                    lng: Number(trip['destination'].lng)
                                };
                                counter++;
                                toastr.info(`${counter}: from ${trip['origin'].name} to ${trip['destination'].name}`);
                                calculateRoute(originCoor, destCoor, i);

                            }
                        }


                    }).always(function () {

                    })

                } else {
                    if ($(this).hasClass("border-2")) {
                        clearRoutes();
                        $(this).removeClass('border-2 border-solid border-green-400 bg-green-400 font-bold');
                        hasSelection = false;
                        newLocation(defaultLocation.lat, defaultLocation.lng);
                    }
                }


            })
        })
    </script>
{% endblock %}