{% extends "layouts/layout.html.twig" %}

{% block title %}
    Welcome to Car Rental Service
{% endblock title %}


{% block section %}
<div class="text-center">
    <div class="inline-block text-left mt-4 max-w-xl">
        <h1 class="text-3xl font-bold">START A RESERVATION</h1>
        <p class="font-bold text-2xl text-green-900">
            Welcome, please select datetime and store(s).
        </p>

        <div class="text-lg">
            <div>
                <table class="w-full mt-4">
                    <tr>
                        <td>1. PICK-UP TIME</td>
                        <td>RENT DAYS</td>
                    </tr>
                    <tr>
                        <td>
                            <input class="text-center p-2 h-10 border-2 border-gray-500" type="date"
                                name="pickupDate" id="pickupDate"/>
                            <input class="pickupTime text-center p-2 h-10 border-2 border-gray-500"
                                value="09:00:00"
                                type="time"
                                list="pickupTimeList"
                                step="600" name="pickupTime" id="pickupTime">
                            <datalist id="pickupTimeList">
                                <option value="08:00"></option>
                                <option value="09:00"></option>
                                <option value="10:00"></option>
                                <option value="11:00"></option>
                                <option value="12:00"></option>
                                <option value="13:00"></option>
                                <option value="14:00"></option>
                                <option value="15:00"></option>
                                <option value="16:00"></option>
                                <option value="17:00"></option>
                                <option value="18:00"></option>
                                <option value="19:00"></option>
                                <option value="20:00"></option>
                            </datalist>
                        </td>
                        <td>
                            <input class="w-16 text-center font-bold h-10 border-2 border-gray-500" type="number" value="1"
                                id="rentDays"/>
                        </td>
                    </tr>
                    <tr>
                        <td class="pt-4">2. RETURN TIME </td>
                    </tr>
                    <tr>
                        <td>
                            <input class="returnDate text-center p-2 h-10 border-2 border-gray-500"
                                type="date"
                                name="returnDate" id="returnDate"/>
                            <input class="returnTime text-center p-2 h-10 border-2 border-gray-500"
                                value="09:00:00"
                                type="time" step="600"
                                list="returnTimeList" name="returnTime" id="returnTime">
                            <datalist id="returnTimeList">
                                <option value="08:00"></option>
                                <option value="09:00"></option>
                                <option value="10:00"></option>
                                <option value="11:00"></option>
                                <option value="12:00"></option>
                                <option value="13:00"></option>
                                <option value="14:00"></option>
                                <option value="15:00"></option>
                                <option value="16:00"></option>
                                <option value="17:00"></option>
                                <option value="18:00"></option>
                                <option value="19:00"></option>
                                <option value="20:00"></option>
                            </datalist>
                        </td>
                        <td></td>
                    </tr>

                    <tr>
                        <td class="pt-4">3. PICK-UP LOCATION (Postal Code, City)</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <div>
                                <input placeholder="X1X or city name" class="w-full p-2 h-10 border-2 border-gray-500" type="text" id="pickupSearchText" list="pickupLocationList" autocomplete="off"/>
                                <datalist id="pickupLocationList">
                                </datalist>
                                <input type="text" class="hidden" id="pickupStoreId" name="pickupStoreId"/>
                            </div>
                            <div >
                                <input type="checkbox" name="isDiffLocation" id="ckbIsDiffLocation"/>
                                <span class="font-bold">Return to a different location</span>
                            </div>
                        </td>
                    </tr>
                    <tbody id="returnLocation" class="hidden">
                        <tr>
                            <td colspan="2">
                                4. RETURN LOCATION (Postal Code, City)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <input placeholder="X1X or city name" class="w-full p-2 h-10 border-2 border-gray-500" type="text" id="returnSearchText" list="returnLocationList" autocomplete="off"/>
                                <datalist id="returnLocationList">
                                </datalist>
                                <input type="text" class="hidden" id="returnStoreId" name="returnStoreId"/>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div id="googleMap" class="mt-4 w-full border-2 border-gray-400" style="height: 400px"></div>

            <div class="my-6 text-right">
                <button id="btContinue" class="px-8 py-2 mt-8 rounded bg-green-700 text-white">CONTINUE</button>
            </div>
        </div>
    </div>
</div>

{% endblock section %}

{% block scripts %}
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFc-jhoXzMv4NW-2qF400eEgu7AvkpscQ&language=en&region-CA&callback=initMap">
</script>
    <script>
        var curLocationElement = $("#pickupSearchText");
        var defaultLocation = {lat: 45.5017, lng: -73.5673};
        var map;
        var markers = [];
        var isStoreChanged = false;

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Shows any markers currently in the array.
        function showAllMarkers() {
            setMapOnAll(map);
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearAllMarkers() {
            setMapOnAll(null);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteAllMarkers() {
            clearAllMarkers();
            markers = [];
        }

        // Adds a marker to the map and push to the array.
        function addMarker(location, store) {
            var marker = new google.maps.Marker({
                position: location,
                map: map,
                icon: {
                    url: "../../resources/companyimages/enterprise_icon.jpg",
                    scaledSize: new google.maps.Size(48, 48),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(10, 10),
                    labelOrigin: {x: 23, y: 10},
                },
                title: store.storeName,
                animation: google.maps.Animation.DROP,
                label: {
                    text: store['carNum'].carNum + '\xa0\xa0\xa0\xa0\xa0' + store['avaCarNum'].carNum,
                    fontSize: "14px",
                    fontWeight: "bold",
                    color: "white"
                }
            });

            var storeInfo = formatStoreInfo(store);

            var infoWindow = new google.maps.InfoWindow({
                content: storeInfo
            })

            marker.addListener('mouseover', function () {
                infoWindow.open(map, marker);
            })
            marker.addListener('mouseout', function () {
                infoWindow.open(map, marker);
                setTimeout(function () {
                    infoWindow.close()
                }, 500);
            })

            marker.addListener('click', function () {
                if (store['avaCarNum'].carNum == "0") {
                    //alert('No avaliable cars in the store, would you select a different location?');
                    toastr.error("No available cars in the store, would you select a different location?", "No available cars");
                    return;
                }
                curLocationElement.val(`${store.storeName}  (${store.address} ${store.postCode})`);
                curLocationElement.next().next().val(store.id);
                isStoreChanged = true;
            })

            markers.push(marker);
        }

        function initMap() {
            map = new google.maps.Map(document.getElementById('googleMap'), {
                center: defaultLocation,
                zoom: 10,
                draggable: true
            });

            loadAdjacentStores(defaultLocation);
        }

        function newLocation(newLat, newLng) {
            map.setCenter({
                lat: newLat,
                lng: newLng
            });
        }


        function formatStoreInfo(store) {
            return `<p class="font-bold text-base">${store.storeName}</p>
                    <p class="text-sm">${store.address}</p>
                    <p class="text-sm">${store.phone}</p>`;
        }

        function getTodayDate() {
            var today = new Date();
            return today.getFullYear() + "-" + ("0" + (today.getMonth() + 1)).slice(-2) + "-" + ("0" + today.getDate()).slice(-2);
        }

        function getNowTime() {
            var today = new Date();
            if (Math.ceil(today.getMinutes() / 10) * 10 >= 60) {
                return ("0" + (today.getHours() + 1)).slice(-2) + ":" + ("0" + Math.ceil(today.getMinutes() / 10) * 10 % 60).slice(-2);
            } else {
                return ("0" + today.getHours()).slice(-2) + ":" + ("0" + Math.ceil(today.getMinutes() / 10) * 10).slice(-2);
            }
        }

        function getReturnDate(days) {
            days = days > 0 ? days : 1;
            var today = new Date();
            var retDate = new Date(Number(today));
            retDate.setDate(today.getDate() + days);
            return retDate.getFullYear() + "-" + ("0" + (retDate.getMonth() + 1)).slice(-2) + "-" + ("0" + retDate.getDate()).slice(-2);
        }

        function searchCities(element, listElement) {
            var curSearchText = $(element).val();
            if (curSearchText.length >= 2) {
                var dataString = JSON.stringify({searchText: curSearchText})

                $.ajax({ // FIXME: escape special characters using urlencode
                    url: "/search/location",
                    type: "POST",
                    dataType: "json",
                    data: dataString,
                    error: function (jqxhr, status, errorThrown) {
                        alert("AJAX error: " + jqxhr.responseText);
                    }
                }).done(function (cityList) {
                    $(listElement).empty();
                    $.each(cityList, function (i, item) {
                        var option = new Option(item['name'] + " (" + item['postalCode'] + ")");
                        $(listElement).append(option);
                    });
                });
            }
        }

        function loadAdjacentStores(yourLocation) {
            $.ajax({
                url: "/map/location/80",
                type: "POST",
                dataType: "json",
                data: JSON.stringify(yourLocation),
            }).done(function (stores) {
                for (var i = 0; i < stores.length; i++) {
                    var store = stores[i];
                    var location = {lat: parseFloat(store.latitude), lng: parseFloat(store.longitude)};

                    addMarker(location, store);
                }
            }).fail(function (jqxhr, status, errorThrown) {
                    alert("AJAX error: " + jqxhr.responseText);
            });
        }

        function resetMapCenter(cityname) {
            deleteAllMarkers();
            $.ajax({ // FIXME: escape special characters using urlencode
                url: "/search/cityname",
                type: "POST",
                dataType: "json",
                data: JSON.stringify(cityname)
            }).done(function (cityCoordinates) {
                var yourLocation;
                if (cityCoordinates === null) {
                    yourLocation = defaultLocation;
                } else {
                    yourLocation = {
                        lat: Number(cityCoordinates.lat), 
                        lng: Number(cityCoordinates.lng)
                    };
                }

                newLocation(Number(cityCoordinates.lat), Number(cityCoordinates.lng));
                var marker = new google.maps.Marker({
                    position: yourLocation,
                    map: map,
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
                        size: new google.maps.Size(32, 32),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(25, 25),
                        labelOrigin: {x: 22, y: -8}
                    },
                    label: {
                        color: 'red',
                        fontWeight: 'bold',
                        fontSize: '18px',
                        text: 'You are here'
                    },
                });
                markers.push(marker);
                showAllMarkers();

                loadAdjacentStores(yourLocation);
            }).fail( function (jqxhr, status, errorThrown) {
                alert("AJAX error: " + jqxhr.responseText);
            });
        }


        function isValidForm(input) {

            if (input.pickupDate === '' || input.pickupTime === '') {
                toastr.error("PICKUP datetime need select","Datetime selection error");

                return false;
            }
            if (input.returnDate === '' || input.returnTime === '') {
                toastr.error("RETURN datetime need select","Datetime selection error");
                return false;
            }

            if (input.returnDate <= input.pickupDate) {
                toastr.error("PICKUP date must be at least one day before RETURN date!","Date error");
                return false;
            }

            //alert("pickup: " + $("#pickupStoreId").val() + ", return:" + $("#returnStoreId").val());
            if (input.pickupStoreId === '') {

                toastr.error("PICKUP store need select","Store selection error");

                return false;
            }
            if ($("#ckbIsDiffLocation").prop('checked') === true) {
                if (input.returnStoreId === '') {
                    toastr.error("RETURN store need select","Store selection error")
                    return false;
                }
            } else {
                input.returnStoreId = input.pickupStoreId;
            }
            return true;
        }


        function updateDate(refElement, days){
            var refVal = $(refElement).val();
            var refDate = new Date(refVal.replace('-','/'));
            var adjDate = new Date(refVal.replace('-','/'));
            adjDate.setDate(refDate.getDate() + days);
            var result = adjDate.getFullYear() + "-" + ("0" + (adjDate.getMonth() + 1)).slice(-2) + "-" + ("0" + adjDate.getDate()).slice(-2);
            return result;
        }

        function setResvInfo(){
            if (typeof(Storage) !== "undefined") {
                if(sessionStorage.selCar){
                    let selCar = JSON.parse(sessionStorage.selCar);
                    if(selCar.pickupDate){
                        $("#pickupDate").val(selCar.pickupDate);
                    }
                    if(selCar.pickupTime){
                        $("#pickupTime").val(selCar.pickupTime);
                    }
                    if(selCar.returnDate){
                        $("#returnDate").val(selCar.returnDate);
                    }
                    if(selCar.returnTime){
                        $("#returnTime").val(selCar.returnTime);
                    }

                    if(selCar.pickupDate || selCar.pickupTime
                        || selCar.returnDate || selCar.returnTime)
                    {
                        let dayDiff = (new Date(selCar.returnDate + " " + selCar.returnTime)
                                - new Date(selCar.pickupDate + " " + selCar.pickupTime)) / (60*60*24*1000);
                        $("#rentDays").val(dayDiff);
                    }

                    if(selCar.pickupStoreId){
                        $.ajax({
                            url: "/ajax/review_reserve/store/" + selCar.pickupStoreId,
                            type: "GET",
                            dataType: "json"
                        }).done(function (data) {
                            let text = `${data.storeName} (${data.address} ${data.postCode})`;
                            $("#pickupStoreId").val(selCar.pickupStoreId);
                            $("#pickupSearchText").val(text);
                        });
                    }

                    if(selCar.returnStoreId){
                        if(selCar.returnStoreId == selCar.pickupStoreId){
                            $("#returnStoreId").val(selCar.returnStoreId);
                        } else {
                            $.ajax({
                                url: "/ajax/review_reserve/store/" + selCar.returnStoreId,
                                type: "GET",
                                dataType: "json"
                            }).done(function (data) {
                                $("#ckbIsDiffLocation").prop("checked",true);
                                let text = `${data.storeName} (${data.address} ${data.postCode})`;
                                $("#returnSearchText").val(text);
                                $("#returnLocation").show();
                            });
                        }
                    }
                }
            } else {
                $("#pickupSearchText").val("");
                $("#returnSearchText").val("");
                $("#pickupStoreId").val("");
                $("#returnStoreId").val("");
                $("#pickupDate").val(getTodayDate);
                $("#pickupTime").val(getNowTime);
                $("#returnDate").val(getReturnDate(Number($("#rentDays").val())));
                $("#returnTime").val(getNowTime);
            }
        }


        $(document).ready(function () {
            {# google.maps.event.addDomListener(window, 'load', initMap); #}

            setResvInfo();

            $("#btContinue").click(function () {
                event.preventDefault();
                let input = {
                    pickupDate : $("#pickupDate").val(),
                    pickupTime : $("#pickupTime").val(),
                    returnDate : $("#returnDate").val(),
                    returnTime : $("#returnTime").val(),
                    pickupStoreId : $("#pickupStoreId").val(),
                    returnStoreId : $("#returnStoreId").val()
                };

                if(isValidForm(input)){
                    if (typeof(Storage) !== "undefined") {
                        
                        if(sessionStorage.selCar){
                            let oldSelCar = JSON.parse(sessionStorage.selCar);
                            input.dailyPrice = oldSelCar.dailyPrice;
                            input.carTypeId = oldSelCar.carTypeId;
                        } 

                        sessionStorage.selCar = JSON.stringify(input);

                        if(isStoreChanged){
                            nextUrl = "/car_selection?pickupStoreId=" + input.pickupStoreId;
                        }
                        window.location.href = nextUrl;
                    } else {
                        alert("Sorry, your browser does not support web storage...");
                    }
                }
            });

            $("#pickupStoreId").change(function () {
                console.log("hello");
            })


            $("#pickupDate").attr('min', getTodayDate);
            $("#returnDate").attr('min', getReturnDate(1));

            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-center",
                "preventDuplicates": false,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "4000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            $("#pickupSearchText").on("change keypress paste", function () {
                var input = $(this).val();
                resetMapCenter(input.substr(0, input.length - 6));
            });

            $("#returnSearchText").on("change keypress paste", function () {
                var input = $(this).val();
                resetMapCenter(input.substr(0, input.length - 6));
            });


            $("#pickupSearchText").on('keypress', function () {
                searchCities(this, "#pickupLocationList");
            });

            $("#returnSearchText").on("keypress", function () {
                searchCities(this, "#returnLocationList");
            });

            $("#returnDate").on("change", function () {
                var retDate = $(this).val();
                var picDate = $("#pickupDate").val();
                if (retDate <= picDate) {
                    $("#returnDate").val(updateDate($("#pickupDate"), Number($("#rentDays").val())));
                    toastr.info("Return date must be at least one day after pickup date!","Return date");
                }
            })

            $("#pickupDate").on("change", function () {
                var picDate = $(this).val();
                var retDate = $("#returnDate").val();
                if (retDate <= picDate) {
                    $("#returnDate").val(updateDate(this, Number($("#rentDays").val())));
                    toastr.info("PICKUP date must be at least one day before return date!","Pickup date");
                }
            })


            $("#rentDays").on("change", function () {
                var days = Number($(this).val()) > 0 ? Number($(this).val()) : 1;
                $(this).val(days);
                $("#returnDate").val(updateDate($("#pickupDate"),days));
            })

            $("#ckbIsDiffLocation").on("change", function () {
                if ($(this).prop("checked")) {
                    curLocationElement = $("#returnSearchText");
                    $("#returnLocation").show();
                } else {
                    curLocationElement = $("#pickupSearchText");
                    $("#returnLocation").hide();
                }
            })

            $("#pickupSearchText").on('focus', function () {
                curLocationElement = $("#pickupSearchText");
            })

            $("#returnSearchText").on("focus", function () {
                curLocationElement = $("#returnSearchText");
            })
        })

        initMap();


        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
            console.log("Ajax error occured on " + settings.url);
            alert("Ajax error occurred");
        });
    </script>
{% endblock scripts %}


